enable_language(CXX)

# Add all the LBANN options; this is just for the GUI, of course
#list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}")
#include(AddLBANNOptions)

set(LBANN_CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}"
  CACHE PATH "The installation destination of LBANN")

set(LBANN_CMAKE_BUILD_TYPE "${CMAKE_BUILD_TYPE}"
  CACHE STRING "The build type for LBANN.")

# Get the list of LBANN variables
get_property(LBANN_VARIABLES DIRECTORY PROPERTY VARIABLES)
list(FILTER LBANN_VARIABLES INCLUDE REGEX "^LBANN_.*")

create_cmake_arguments(
  OUTPUT_VARIABLE LBANN_CMAKE_ARGS
  PACKAGE_NAME LBANN
  SKIP_VARS_WITH_PREFIXES "LBANN_SB"
  EXTRA_REMOVE_PREFIXES "LBANN_SB_FWD_LBANN"
  VARIABLES ${LBANN_VARIABLES})

option(LBANN_SB_CLONE_CLEAN_LBANN "Will pull a clean LBANN repository." OFF)

if (LBANN_SB_CLONE_CLEAN_LBANN)

  set(LBANN_URL "https://github.com/llnl/lbann"
    CACHE STRING "The URL from which to clone LBANN")

  set(LBANN_TAG "develop"
    CACHE STRING "The git tag or hash to checkout for LBANN")

  set(LBANN_SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/src)

  set(_git_repo_tag GIT_REPOSITORY)
  set(_git_tag_tag GIT_TAG)

else ()

  unset(LBANN_URL CACHE)
  unset(LBANN_TAG CACHE)
  unset(_git_repo_tag)
  unset(_git_tag_tag)

  get_filename_component(LBANN_SOURCE_DIR ${CMAKE_SOURCE_DIR}/.. REALPATH)

endif ()

set(LBANN_CMAKE_GENERATOR "${CMAKE_GENERATOR}"
  CACHE STRING "The generator used by CMake for LBANN.")

# Build the dependency set
if (TARGET CNPY)
  set(_LBANN_DEPENDS "${_LBANN_DEPENDS}" CNPY)
  list(APPEND LBANN_CMAKE_ARGS "-DCNPY_DIR=${CNPY_DIR}")
endif ()
if (TARGET CUB)
  set(_LBANN_DEPENDS "${_LBANN_DEPENDS}" CUB)
  list(APPEND LBANN_CMAKE_ARGS "-DCUB_DIR=${CUB_DIR}")
endif ()
if (TARGET ELEMENTAL)
  set(_LBANN_DEPENDS "${_LBANN_DEPENDS}" ELEMENTAL)
  list(APPEND LBANN_CMAKE_ARGS "-DElemental_DIR=${ELEMENTAL_DIR}")
endif ()
if (TARGET HYDROGEN)
  set(_LBANN_DEPENDS "${_LBANN_DEPENDS}" HYDROGEN)
  list(APPEND LBANN_CMAKE_ARGS "-DHydrogen_DIR=${HYDROGEN_DIR}")
endif ()
if (TARGET OPENCV)
  set(_LBANN_DEPENDS "${_LBANN_DEPENDS}" OPENCV)
  list(APPEND LBANN_CMAKE_ARGS "-DOpenCV_DIR=${OPENCV_DIR}")
endif ()
if (TARGET PROTOBUF)
  set(_LBANN_DEPENDS "${_LBANN_DEPENDS}" PROTOBUF)
  list(APPEND LBANN_CMAKE_ARGS "-DPROTOBUF_DIR=${PROTOBUF_DIR}")
endif ()

include(ExternalProject)
ExternalProject_Add(LBANN
  PREFIX ${CMAKE_CURRENT_BINARY_DIR}
  TMP_DIR ${CMAKE_CURRENT_BINARY_DIR}/tmp
  STAMP_DIR ${CMAKE_CURRENT_BINARY_DIR}/stamp
  ${_git_repo_tag} ${LBANN_URL}
  ${_git_tag_tag} ${LBANN_TAG}
  DEPENDS ${_LBANN_DEPENDS}
  SOURCE_DIR ${LBANN_SOURCE_DIR}
  BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/build
  INSTALL_DIR ${LBANN_CMAKE_INSTALL_PREFIX}
  USES_TERMINAL_BUILD 1
  CMAKE_ARGS
  -G${LBANN_CMAKE_GENERATOR}
  -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
  -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
  ${LBANN_CMAKE_ARGS}
  )

set(LBANN_DIR ${LBANN_CMAKE_INSTALL_PREFIX}
  CACHE INTERNAL "The install prefix of LBANN.")
